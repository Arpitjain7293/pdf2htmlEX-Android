apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        ndk.abiFilters = project.hasProperty('abi') ? [ project.property('abi') ] : null
    }
    buildTypes {
        release.externalNativeBuild {
          cmake.arguments '-DCMAKE_BUILD_TYPE=MinSizeRel'
        }
        debug.externalNativeBuild {
          cmake.arguments '-DBUILD_3RDPARTY_BINARIES=ON'
        }
    }
    externalNativeBuild.cmake {
        path "src/main/cpp/CMakeLists.txt"
        version "3.10.2"
    }
    ndkVersion "20.1.5948944"
}

// Issue #1
task touchGlibPackage(type: Exec) {
    commandLine 'touch', 'src/main/cpp/packages/glib-2.0.cmake'
}
preBuild.dependsOn touchGlibPackage

task gatherLicenses {
  doLast {
    file("$buildDir/licenses.xml").withWriter { writer ->
        def xml = new groovy.xml.MarkupBuilder(writer)

        xml.doubleQuotes = true
        xml.mkp.xmlDeclaration(version: '1.0', encoding: 'utf-8')

        xml.licenses() {
            def addLicense = { depName, licenseFiles ->
                license {
                    name(depName)
                    def urlVal = new StringBuilder()
                    licenseFiles.each() { licenseFilename ->
                        urlVal.append("$depName/$licenseFilename\n\n")

                        def abi = project.hasProperty('abi') ? project.property('abi') : "x86"
                        def buildTargetPath = "$projectDir/../dependency-builder/.cxx/cmake/release/" + abi
                        def licenseFile = new File(buildTargetPath + "/$depName-prefix/src/$depName/$licenseFilename")
                        def licenseText = licenseFile.getText('UTF-8')
                        // LGPL2.1 and GPLv2 licenses include form feed (page break) characters.
                        // XML does not take kindly to form feed characters.
                        if ((depName == "cairo" && licenseFilename == "COPYING-LGPL-2.1") ||
                            (depName == "freetype" && licenseFilename == "docs/GPLv2.TXT") ||
                            (depName == "glib-2.0" && licenseFilename == "COPYING") ||
                            (depName == "fribidi" && licenseFilename == "COPYING") ||
                            (depName == "iconv" && licenseFilename == "COPYING.LIB") ||
                            (depName == "intl" && licenseFilename == "COPYING") ||
                            (depName == "pango" && licenseFilename == "COPYING")) {
                            urlVal.append(licenseText.replace("\u000C", ""))
                        } else {
                            urlVal.append(licenseText)
                        }
                        urlVal.append("\n\n")
                    }
                    url(urlVal)
                }
            }
            addLicense("pdf2htmlEX", ["LICENSE", "LICENSE_GPLv3"])
            addLicense("cairo", ["COPYING", "COPYING-LGPL-2.1", "COPYING-MPL-1.1"])
            addLicense("fontconfig", ["COPYING"])
            addLicense("freetype", ["docs/LICENSE.TXT", "docs/GPLv2.TXT", "docs/FTL.TXT"])
            addLicense("fribidi", ["COPYING"])
            addLicense("glib-2.0", ["COPYING"])
            addLicense("harfbuzz", ["COPYING"])
            addLicense("iconv", ["README", "COPYING", "COPYING.LIB"])
            addLicense("intl", ["COPYING"])
            addLicense("lcms2", ["COPYING"])
            addLicense("libffi", ["LICENSE"])
            addLicense("libfontforge", ["LICENSE", "COPYING.gplv3"])
            addLicense("libjpeg", ["LICENSE.md", "README.ijg"])
            addLicense("libopenjp2", ["LICENSE"])
            addLicense("libpng", ["LICENSE"])
            addLicense("libtiff-4", ["COPYRIGHT"])
            addLicense("libtool", ["COPYING"])
            addLicense("libuninameslist", ["LICENSE"])
            addLicense("libxml-2.0", ["Copyright"])
            addLicense("pango", ["COPYING"])
            addLicense("pixman-1", ["COPYING"])
            addLicense("poppler-data", ["COPYING", "COPYING.adobe", "COPYING.gpl2"])
            addLicense("poppler", ["COPYING", "COPYING3"])
        }
    }
  }
}

tasks.whenTaskAdded {
    if (it.name == 'externalNativeBuildRelease') {
        gatherLicenses.dependsOn externalNativeBuildRelease
    }
}
