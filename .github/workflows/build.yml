name: Build
on: push

env:
  ANDROID_SDK_TOOLS:  "4333796"
  ANDROID_NDK:        "20.1.5948944"
  ANDROID_CMAKE:      "3.10.2.4988404"

jobs:
  cacheTarballs:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1

      - run: ./dodownloadtarballs

      - run: ls -lR dependency-builder/src/main/cpp/tarballs

      - uses: actions/upload-artifact@v1
        with:
          name: tarballs
          path: dependency-builder/src/main/cpp/tarballs

  debug:
    runs-on: ubuntu-18.04
    needs: cacheTarballs
    strategy:
      matrix:
        abi: [ x86, x86_64, armeabi-v7a, arm64-v8a ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install Meson
        run: |
          # python3-setuptools and python3-wheel are required to pip install meson
          sudo apt-get --quiet install --yes python3-setuptools python3-wheel
          sudo -H pip3 install meson

      - name: Install dependencies
        run: sudo apt-get --quiet install --yes gperf gettext
        # gperf is required by fontconfig
        # gettext is required by libfontforge

      - name: Install Android tools
        run: |
          if test ! -d $ANDROID_HOME/tools/bin/sdkmanager
          then
            wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
            sudo unzip -d $ANDROID_HOME android-sdk.zip > /dev/null
            rm android-sdk.zip
          fi
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "tools" > /dev/null
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager --licenses > /dev/null

      - name: Install CMake and NDK
        run: |
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "cmake;${ANDROID_CMAKE}" > /dev/null
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "ndk;${ANDROID_NDK}" > /dev/null

      - name: Download tarballs
        uses: actions/download-artifact@v1
        with:
          name: tarballs
          path: dependency-builder/src/main/cpp/tarballs

      - name: Build pdf2htmlEX
        run: ./gradlew assembleDebug -PdisablePreDex -Pabi=${{ matrix.abi }}

      - name: Upload build logs -stdout
        uses: actions/upload-artifact@v1
        with:
          name: debug-${{ matrix.abi }}-dependency-builder.stdout
          path: pdf2htmlEX/.cxx/cmake/debug/${{ matrix.abi }}/dependency-builder.stdout

      - name: Upload build logs -stderr
        uses: actions/upload-artifact@v1
        with:
          name: debug-${{ matrix.abi }}-dependency-builder.stderr
          path: pdf2htmlEX/.cxx/cmake/debug/${{ matrix.abi }}/dependency-builder.stderr

  release:
    needs: cacheTarballs
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        abi: [ x86, x86_64, armeabi-v7a, arm64-v8a ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install Meson
        run: |
          # python3-setuptools and python3-wheel are required to pip install meson
          sudo apt-get --quiet install --yes python3-setuptools python3-wheel
          sudo -H pip3 install meson

      - name: Install dependencies
        run: sudo apt-get --quiet install --yes gperf gettext
        # gperf is required by fontconfig
        # gettext is required by libfontforge

      - name: Install Android tools
        run: |
          if test ! -d $ANDROID_HOME/tools/bin/sdkmanager
          then
            wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
            sudo unzip -d $ANDROID_HOME android-sdk.zip > /dev/null
            rm android-sdk.zip
          fi
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "tools" > /dev/null
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager --licenses > /dev/null

      - name: Install CMake and NDK
        run: |
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "cmake;${ANDROID_CMAKE}" > /dev/null
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "ndk;${ANDROID_NDK}" > /dev/null

      - name: Download tarballs
        uses: actions/download-artifact@v1
        with:
          name: tarballs
          path: dependency-builder/src/main/cpp/tarballs

      - name: Build pdf2htmlEX
        run: ./gradlew assembleRelease -PdisablePreDex -Pabi=${{ matrix.abi }}

      - name: Gather licenses
        run: ./gradlew pdf2htmlEX:gatherLicenses -Pabi=${{ matrix.abi }}

      - name: Cache gathered licenses
        uses: actions/upload-artifact@v1
        with:
          name: licenses-${{ matrix.abi }}
          path: pdf2htmlEX/build/licenses.xml

      - name: Cache built dependencies
        uses: actions/upload-artifact@v1
        with:
          name: dependencies-${{ matrix.abi }}
          path: dependency-builder/.cxx/cmake/release/${{ matrix.abi }}/installed

      - name: Upload build logs -stdout
        uses: actions/upload-artifact@v1
        with:
          name: release-${{ matrix.abi }}-dependency-builder.stdout
          path: pdf2htmlEX/.cxx/cmake/release/${{ matrix.abi }}/dependency-builder.stdout

      - name: Upload build logs -stderr
        uses: actions/upload-artifact@v1
        with:
          name: release-${{ matrix.abi }}-dependency-builder.stderr
          path: pdf2htmlEX/.cxx/cmake/release/${{ matrix.abi }}/dependency-builder.stderr

  releaseAllABIs:
    needs: [ cacheTarballs, release ]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install Android tools
        run: |
          if test ! -d $ANDROID_HOME/tools/bin/sdkmanager
          then
            wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
            sudo unzip -d $ANDROID_HOME android-sdk.zip > /dev/null
            rm android-sdk.zip
          fi
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "tools" > /dev/null
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager --licenses > /dev/null

      - name: Install CMake and NDK
        run: |
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "cmake;${ANDROID_CMAKE}" > /dev/null
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager "ndk;${ANDROID_NDK}" > /dev/null

      - name: Cache gathered licenses
        uses: actions/upload-artifact@v1
        with:
          name: licenses-x86
          path: pdf2htmlEX/build/licenses.xml

      - name: Download cached dependencies - x86
        uses: actions/download-artifact@v1
        with:
          name: dependencies-x86
          path: dependency-builder/.cxx/cmake/release/x86/installed

      - name: Download cached dependencies - x86_64
        uses: actions/download-artifact@v1
        with:
          name: dependencies-x86_64
          path: dependency-builder/.cxx/cmake/release/x86_64/installed

      - name: Download cached dependencies - armeabi-v7a
        uses: actions/download-artifact@v1
        with:
          name: dependencies-armeabi-v7a
          path: dependency-builder/.cxx/cmake/release/armeabi-v7a/installed

      - name: Download cached dependencies - arm64-v8a
        uses: actions/download-artifact@v1
        with:
          name: dependencies-arm64-v8a
          path: dependency-builder/.cxx/cmake/release/arm64-v8a/installed

      - name: Build pdf2htmlEX
        run: ./gradlew assembleRelease -PdisablePreDex

      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(./getVersion.sh)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: pdf2htmlEX-Android v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false

      - name: Upload licenses
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/licenses.xml
          asset_name: licenses.xml
          asset_content_type: text/xml

      - name: Upload aar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/outputs/aar/pdf2htmlex-android-release.aar
          asset_name: pdf2htmlex-android-release.aar
          asset_content_type: application/zip

      - name: Generate javadoc
        run: ./gradlew pdf2htmlEX:javadocJar

      - name: Upload javadoc.jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/libs/pdf2htmlex-android-${{steps.get_version.outputs.version}}-javadoc.jar
          asset_name: pdf2htmlex-android-${{steps.get_version.outputs.version}}-javadoc.jar
          asset_content_type: application/zip

      - name: Jar the sources
        run: ./gradlew pdf2htmlEX:sourceJar

      - name: Upload sources.jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/libs/pdf2htmlex-android-${{steps.get_version.outputs.version}}-sources.jar
          asset_name: pdf2htmlex-android-${{steps.get_version.outputs.version}}-sources.jar
          asset_content_type: application/zip
