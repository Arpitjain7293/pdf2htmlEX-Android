apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
    }
    buildTypes {
        release {
            externalNativeBuild {
                cmake {
                  arguments '-DCMAKE_BUILD_TYPE=MinSizeRel'
                }
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    sourceSets.main.assets.srcDirs = ["${project.buildDir}/assets/"]
    ndkVersion "20.0.5594570"
}

// pdf2htmlEX and Poppler have some data that is needed on runtime
task collectAssetsFromShareFolder {
    doLast {
        copy {
            new File("$projectDir/../../build").eachDir() { buildType ->
                buildType.eachDir() {
                    from("$it/share")
                    include("pdf2htmlEX/**", "poppler/**")
                    into("${project.buildDir}/assets")
                }
            }
            duplicatesStrategy('exclude')
        }
    }
}

// Because "generateDebugAssets.dependsOn collectAssetsFromShareFolder" would be too simple
tasks.whenTaskAdded {
    if (it.name == 'generateDebugAssets' || it.name == 'generateReleaseAssets') {
        it.dependsOn collectAssetsFromShareFolder
    }
}

// Extract shared .so libraries to build directory
// So that they could be linked against in CMake
task extractLibtmpfileSoForLinkingInCMake(type: Copy) {
    from zipTree("${project.rootDir}/pdf2htmlEX/libs/tmpfile-1.0.0.aar")
    into "${project.buildDir}/tmpfile/"
    include "jni/**/libtmpfile.so"
}
preBuild.dependsOn extractLibtmpfileSoForLinkingInCMake

dependencies {
    implementation files('libs/tmpfile-1.0.0.aar')
    implementation 'androidx.annotation:annotation:1.1.0'
}

